
-- Generated by ORDS REST Data Services 21.4.3.r1170405
-- Schema: SAF  Date: Tue Aug 29 05:17:23 2023 
--

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'SAF',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'safws',
      p_auto_rest_auth      => FALSE);
    
  ORDS.DEFINE_MODULE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_base_path      => '/reporte/',
      p_items_per_page => 0,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'eerr/resumen/:mes_inicio/:mes_fin/:anio/:moneda/:version',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'eerr/resumen/:mes_inicio/:mes_fin/:anio/:moneda/:version',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    ID,
	NOMBRE,
	CLASE,
	ID_REGISTRO,
	MES,
	CODIGO_DIVISION,
	VALOR,
	BLOQUE
FROM TABLE
(
    SAF.FNC_T_REPORTE_FINANCIERO_EERR_RESUMEN_UNIDADES
    (
        V_MES_INICIO => :mes_inicio,
        V_MES_FIN => :mes_fin,
        V_ANIO => :anio,
        V_MONEDA => :moneda,
        V_VERSION => :version
    )
)');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'eerr/consolidado/:mes_inicio/:mes_fin/:anio/:moneda/:version',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'eerr/consolidado/:mes_inicio/:mes_fin/:anio/:moneda/:version',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    ID,
	NOMBRE,
	CLASE,
	ID_REGISTRO,
	MES,
	CODIGO_DIVISION,
	VALOR,
	BLOQUE
FROM TABLE
(
    SAF.FNC_T_REPORTE_FINANCIERO_EERR_CONSOLIDADO_PRESUPUESTO
    (
        V_MES_INICIO => :mes_inicio,
        V_MES_FIN => :mes_fin,
        V_ANIO => :anio,
        V_MONEDA => :moneda,
        V_VERSION => :version
    )
)');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'eerr/consxun/:mes_inicio/:mes_fin/:anio/:moneda/:version',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'eerr/consxun/:mes_inicio/:mes_fin/:anio/:moneda/:version',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    ID,
	NOMBRE,
	CLASE,
	ID_REGISTRO,
	MES,
	CODIGO_DIVISION,
	VALOR,
	BLOQUE
FROM TABLE
(
    SAF.FNC_T_REPORTE_FINANCIERO_EERR_CXU
    (
        V_MES_INICIO => :mes_inicio,
        V_MES_FIN => :mes_fin,
        V_ANIO => :anio,
        V_MONEDA => :moneda,
        V_VERSION => :version
    )
)');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'proyectos/sin/terminados/buscador/:empresa/:division/:proyecto',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'proyectos/sin/terminados/buscador/:empresa/:division/:proyecto',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'WITH PROYECTOS_SIN_CONCLUIR AS
(
	SELECT 
		A.CODIGO_EMPRESA,
		A.CODIGO_DIVISION,
		A.COD_CTA,
		B.CODIGO_PROYECTO,
		B.DESCRIPCION,
		(
	        CASE WHEN C.TIPSALDO = ''D'' THEN
	            CASE WHEN A.DB_HB = ''D'' THEN
	                NVL(A.VALOR, 0)
	            ELSE
	                NVL(A.VALOR, 0) * -1
	            END
	        ELSE
	            CASE WHEN A.DB_HB = ''D'' THEN
	                NVL(A.VALOR, 0) * -1
	            ELSE
	                NVL(A.VALOR, 0)
	            END
	        END
	    ) VALOR_POLIZA,
	    --(''20'' || TO_CHAR(B.INICIO_PROYECTO, ''YY'')) ANIO_INICIO
        TO_CHAR(A.EJERCICIO) ANIO_INICIO
	FROM SAF.CON_POLIZASD A
	INNER JOIN SAF.EST_PROYECTOS B ON B.CODIGO_CC = A.CODIGO_CC
	INNER JOIN SAF.CON_CATCTAS C ON C.COD_CTA = A.COD_CTA AND C.VERSION = (SELECT MAX(VERSION) FROM SAF.CON_CATCTAS)
	WHERE (A.COD_CTA LIKE ''4%'' OR A.COD_CTA LIKE ''5%'')
	AND A.EJERCICIO >= 2020
	AND B.ESTADO != ''BORRADOR''
	AND B.FECHA_FINALIZACION_PROYECTO IS ' || 'NULL
    AND B.INICIO_PROYECTO IS NOT NULL
    AND B.CODIGO_PROYECTO = :proyecto
    AND A.COD_TIPOL != 30
)
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(SUM(
		CASE WHEN COD_CTA LIKE ''4%'' THEN
			VALOR_POLIZA
		ELSE
			0
		END
	), 0)) VALOR,
	''Costo'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(SUM(
			CASE WHEN COD_CTA LIKE ''4%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)) VALOR,
		''Costo'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_I' || 'NICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(SUM(
		CASE WHEN COD_CTA LIKE ''5%'' THEN
			VALOR_POLIZA
		ELSE
			0
		END
	), 0)) VALOR,
	''Ingreso'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(SUM(
			CASE WHEN COD_CTA LIKE ''5%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)) VALOR,
		''Ingreso'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(' || 'NVL(
		NVL(SUM(
			CASE WHEN COD_CTA LIKE ''4%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)
		-
		NVL(SUM(
			CASE WHEN COD_CTA LIKE ''5%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)
	,0)) VALOR,
	''Margen'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''4%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
			-
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''5%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
		,0)) VALOR,
		''Margen'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIG' || 'O_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(
		CASE WHEN 
			(
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			) != 0 THEN
			(
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
				-
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''5%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			)
			/
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''4%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
		ELSE
			0
		END
	, 0) * 100) VALOR,
	''Margen %'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY''))' || ' + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(
			CASE WHEN 
				(
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''4%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
				) != 0 THEN
				(
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''4%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
					-
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''5%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
				)
				/
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			ELSE
				0
			END
		, 0) * 100) VALOR,
		''Margen %'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'proyectos/sin/terminados/:empresa/:division',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'proyectos/sin/terminados/:empresa/:division',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'WITH PROYECTOS_SIN_CONCLUIR AS
(
	SELECT 
		A.CODIGO_EMPRESA,
		A.CODIGO_DIVISION,
		A.COD_CTA,
		B.CODIGO_PROYECTO,
		B.DESCRIPCION,
		(
	        CASE WHEN C.TIPSALDO = ''D'' THEN
	            CASE WHEN A.DB_HB = ''D'' THEN
	                NVL(A.VALOR, 0)
	            ELSE
	                NVL(A.VALOR, 0) * -1
	            END
	        ELSE
	            CASE WHEN A.DB_HB = ''D'' THEN
	                NVL(A.VALOR, 0) * -1
	            ELSE
	                NVL(A.VALOR, 0)
	            END
	        END
	    ) VALOR_POLIZA,
	    --(''20'' || TO_CHAR(B.INICIO_PROYECTO, ''YY'')) ANIO_INICIO
        TO_CHAR(A.EJERCICIO) ANIO_INICIO
	FROM SAF.CON_POLIZASD A
	INNER JOIN SAF.EST_PROYECTOS B ON B.CODIGO_CC = A.CODIGO_CC AND B.CODIGO_EMPRESA = A.CODIGO_EMPRESA AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
	INNER JOIN SAF.CON_CATCTAS C ON C.COD_CTA = A.COD_CTA AND C.VERSION = (SELECT MAX(VERSION) FROM SAF.CON_CATCTAS)
	WHERE (A.COD_CTA LIKE ''4%'' OR A.COD_CTA LIKE ''5%'')
	AND A.EJER' || 'CICIO >= 2020
	AND B.ESTADO != ''BORRADOR''
	AND B.FECHA_FINALIZACION_PROYECTO IS NULL
    AND B.INICIO_PROYECTO IS NOT NULL
    AND A.COD_TIPOL != 30
)
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(SUM(
		CASE WHEN COD_CTA LIKE ''4%'' THEN
			VALOR_POLIZA
		ELSE
			0
		END
	), 0)) VALOR,
	''Costo'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(SUM(
			CASE WHEN COD_CTA LIKE ''4%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)) VALOR,
		''Costo'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GR' || 'OUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(SUM(
		CASE WHEN COD_CTA LIKE ''5%'' THEN
			VALOR_POLIZA
		ELSE
			0
		END
	), 0)) VALOR,
	''Ingreso'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(SUM(
			CASE WHEN COD_CTA LIKE ''5%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)) VALOR,
		''Ingreso'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PRO' || 'YECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(
		NVL(SUM(
			CASE WHEN COD_CTA LIKE ''4%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)
		-
		NVL(SUM(
			CASE WHEN COD_CTA LIKE ''5%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)
	,0)) VALOR,
	''Margen'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''4%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
			-
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''5%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
		,0)) VALOR,
		''Margen'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND C' || 'ODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(
		CASE WHEN 
			(
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			) != 0 THEN
			(
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
				-
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''5%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			)
			/
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''4%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
		ELSE
			0
		END
	, 0) * 100) VALOR,
	''Margen %'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		' || 'TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(
			CASE WHEN 
				(
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''4%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
				) != 0 THEN
				(
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''4%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
					-
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''5%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
				)
				/
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			ELSE
				0
			END
		, 0) * 100) VALOR,
		''Margen %'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO,' || ' TIPO');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'proyectos/terminados/:empresa/:division',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'proyectos/terminados/:empresa/:division',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'WITH PROYECTOS_SIN_CONCLUIR AS
(
	SELECT 
		A.CODIGO_EMPRESA,
		A.CODIGO_DIVISION,
		A.COD_CTA,
		B.CODIGO_PROYECTO,
		B.DESCRIPCION,
		(
	        CASE WHEN C.TIPSALDO = ''D'' THEN
	            CASE WHEN A.DB_HB = ''D'' THEN
	                NVL(A.VALOR, 0)
	            ELSE
	                NVL(A.VALOR, 0) * -1
	            END
	        ELSE
	            CASE WHEN A.DB_HB = ''D'' THEN
	                NVL(A.VALOR, 0) * -1
	            ELSE
	                NVL(A.VALOR, 0)
	            END
	        END
	    ) VALOR_POLIZA,
	    --(''20'' || TO_CHAR(B.INICIO_PROYECTO, ''YY'')) ANIO_INICIO
	    A.EJERCICIO ANIO_INICIO
	FROM SAF.CON_POLIZASD A
	INNER JOIN SAF.EST_PROYECTOS B ON B.CODIGO_CC = A.CODIGO_CC AND B.CODIGO_EMPRESA = A.CODIGO_EMPRESA AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
	INNER JOIN SAF.CON_CATCTAS C ON C.COD_CTA = A.COD_CTA AND C.VERSION = (SELECT MAX(VERSION) FROM SAF.CON_CATCTAS)
	WHERE (A.COD_CTA LIKE ''4%'' OR A.COD_CTA LIKE ''5%'')
	AND A.EJERCICIO >= 202' || '0
	AND B.ESTADO != ''BORRADOR''
	AND B.FECHA_FINALIZACION_PROYECTO IS NOT NULL
    AND B.INICIO_PROYECTO IS NOT NULL
    AND A.COD_TIPOL != 30
)
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(SUM(
		CASE WHEN COD_CTA LIKE ''4%'' THEN
			VALOR_POLIZA
		ELSE
			0
		END
	), 0)) VALOR,
	''Costo'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(SUM(
			CASE WHEN COD_CTA LIKE ''4%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)) VALOR,
		''Costo'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY C' || 'ODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(SUM(
		CASE WHEN COD_CTA LIKE ''5%'' THEN
			VALOR_POLIZA
		ELSE
			0
		END
	), 0)) VALOR,
	''Ingreso'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(SUM(
			CASE WHEN COD_CTA LIKE ''5%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)) VALOR,
		''Ingreso'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
' || '	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(
		NVL(SUM(
			CASE WHEN COD_CTA LIKE ''4%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)
		-
		NVL(SUM(
			CASE WHEN COD_CTA LIKE ''5%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)
	,0)) VALOR,
	''Margen'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''4%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
			-
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''5%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
		,0)) VALOR,
		''Margen'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DI' || 'VISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(
		CASE WHEN 
			(
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			) != 0 THEN
			(
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
				-
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''5%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			)
			/
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''4%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
		ELSE
			0
		END
	, 0) * 100) VALOR,
	''Margen %'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(' || 'TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(
			CASE WHEN 
				(
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''4%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
				) != 0 THEN
				(
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''4%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
					-
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''5%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
				)
				/
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			ELSE
				0
			END
		, 0) * 100) VALOR,
		''Margen %'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'proyectos/terminados/buscador/:empresa/:division/:proyecto',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'proyectos/terminados/buscador/:empresa/:division/:proyecto',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'WITH PROYECTOS_SIN_CONCLUIR AS
(
	SELECT 
		A.CODIGO_EMPRESA,
		A.CODIGO_DIVISION,
		A.COD_CTA,
		B.CODIGO_PROYECTO,
		B.DESCRIPCION,
		(
	        CASE WHEN C.TIPSALDO = ''D'' THEN
	            CASE WHEN A.DB_HB = ''D'' THEN
	                NVL(A.VALOR, 0)
	            ELSE
	                NVL(A.VALOR, 0) * -1
	            END
	        ELSE
	            CASE WHEN A.DB_HB = ''D'' THEN
	                NVL(A.VALOR, 0) * -1
	            ELSE
	                NVL(A.VALOR, 0)
	            END
	        END
	    ) VALOR_POLIZA,
	    --(''20'' || TO_CHAR(B.INICIO_PROYECTO, ''YY'')) ANIO_INICIO
        TO_CHAR(A.EJERCICIO) ANIO_INICIO
	FROM SAF.CON_POLIZASD A
	INNER JOIN SAF.EST_PROYECTOS B ON B.CODIGO_CC = A.CODIGO_CC
	INNER JOIN SAF.CON_CATCTAS C ON C.COD_CTA = A.COD_CTA AND C.VERSION = (SELECT MAX(VERSION) FROM SAF.CON_CATCTAS)
	WHERE (A.COD_CTA LIKE ''4%'' OR A.COD_CTA LIKE ''5%'')
	AND A.EJERCICIO >= 2020
	AND B.ESTADO != ''BORRADOR''
	AND B.FECHA_FINALIZACION_PROYECTO IS ' || 'NOT NULL
    AND B.INICIO_PROYECTO IS NOT NULL
    AND B.CODIGO_PROYECTO = :proyecto
    AND A.COD_TIPOL != 30
)
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(SUM(
		CASE WHEN COD_CTA LIKE ''4%'' THEN
			VALOR_POLIZA
		ELSE
			0
		END
	), 0)) VALOR,
	''Costo'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(SUM(
			CASE WHEN COD_CTA LIKE ''4%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)) VALOR,
		''Costo'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, AN' || 'IO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(SUM(
		CASE WHEN COD_CTA LIKE ''5%'' THEN
			VALOR_POLIZA
		ELSE
			0
		END
	), 0)) VALOR,
	''Ingreso'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(SUM(
			CASE WHEN COD_CTA LIKE ''5%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)) VALOR,
		''Ingreso'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	' || 'ABS(NVL(
		NVL(SUM(
			CASE WHEN COD_CTA LIKE ''4%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)
		-
		NVL(SUM(
			CASE WHEN COD_CTA LIKE ''5%'' THEN
				VALOR_POLIZA
			ELSE
				0
			END
		), 0)
	,0)) VALOR,
	''Margen'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYYY'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''4%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
			-
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''5%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
		,0)) VALOR,
		''Margen'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY C' || 'ODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	ANIO_INICIO,
	ABS(NVL(
		CASE WHEN 
			(
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			) != 0 THEN
			(
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
				-
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''5%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			)
			/
			NVL(SUM(
				CASE WHEN COD_CTA LIKE ''4%'' THEN
					VALOR_POLIZA
				ELSE
					0
				END
			), 0)
		ELSE
			0
		END
	, 0) * 100) VALOR,
	''Margen %'' AS TIPO
FROM PROYECTOS_SIN_CONCLUIR
WHERE CODIGO_EMPRESA = :empresa
AND CODIGO_DIVISION = :division
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
UNION ALL
SELECT
	CODIGO_PROYECTO,
	DESCRIPCION,
	(
		TO_CHAR(TO_NUMBER(TO_CHAR(SYSDATE, ''YYY' || 'Y'')) + 1)
	) AS ANIO_INICIO,
	SUM(VALOR) AS VALOR,
	TIPO
FROM
(
	SELECT
		CODIGO_PROYECTO,
		DESCRIPCION,
		ANIO_INICIO,
		ABS(NVL(
			CASE WHEN 
				(
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''4%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
				) != 0 THEN
				(
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''4%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
					-
					NVL(SUM(
						CASE WHEN COD_CTA LIKE ''5%'' THEN
							VALOR_POLIZA
						ELSE
							0
						END
					), 0)
				)
				/
				NVL(SUM(
					CASE WHEN COD_CTA LIKE ''4%'' THEN
						VALOR_POLIZA
					ELSE
						0
					END
				), 0)
			ELSE
				0
			END
		, 0) * 100) VALOR,
		''Margen %'' AS TIPO
	FROM PROYECTOS_SIN_CONCLUIR
	WHERE CODIGO_EMPRESA = :empresa
	AND CODIGO_DIVISION = :division
	GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO
)
GROUP BY CODIGO_PROYECTO, DESCRIPCION, ANIO_INICIO, TIPO');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'nombre/division/:id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Reporte Financieros Contabilidad',
      p_pattern        => 'nombre/division/:id',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
	NVL(INITCAP(DESCRIPCION), ''Division No Registrada'') AS NOMBRE
FROM SAF.GRAL_DIVISIONES 
WHERE CODIGO_DIVISION = REPLACE(:id, ''DIV-'', '''')');

    
        
COMMIT;

END;