CREATE OR REPLACE FUNCTION SAF.FNC_T_REPORTE_FINANCIERO_EERR_CXU
(
	V_MES_INICIO NUMBER DEFAULT 1,
	V_MES_FIN NUMBER,
	V_ANIO NUMBER DEFAULT TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')),
	V_MONEDA NUMBER DEFAULT 1,
	V_VERSION NUMBER DEFAULT 2020
)
RETURN T_REPORTE_FINANCIERO_EERR_CXU AS
    V_T_REPORTE_FINANCIERO_EERR_CXU T_REPORTE_FINANCIERO_EERR_CXU := T_REPORTE_FINANCIERO_EERR_CXU();

	CURSOR C_DATOS IS
		WITH DIVISIONES_TABLE AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE IN (50,51,52)
			), MESES_TABLE AS 
			(
				SELECT LEVEL AS NUMERO
				FROM DUAL
				CONNECT BY LEVEL <= GREATEST(V_MES_FIN, 14)
			), DIVISIONES_REPORTE_50 AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE = 50
			), DIVISIONES_REPORTE_51 AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE = 51
			), DIVISIONES_REPORTE_52 AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE = 52
			), DIVISIONES_REPORTE_53 AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE = 53
			), ESTRUCTURA AS
			(
				SELECT
					ROWNUM ID,
					NOMBRE,
					CLASE,
					ID_REGISTRO
				FROM
				(
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID ID_REGISTRO
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'MargenBruto'
					UNION ALL
					SELECT
						'Margen Bruto',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'ResultadosEnOperacion'
					UNION ALL
					SELECT
						'Resultados En Operacion',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'Resultado'
					UNION ALL
					SELECT
						'Resultado',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'EBITDA'
					UNION ALL
					SELECT
						'EBITDA',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'ResultadosAntesOtrosIngresosGastos'
					UNION ALL
					SELECT
						'Resultados Antes de Otros Ingresos y Gastos',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'ResultadosAntesImpuestos'
					UNION ALL
					SELECT
						'Resultados Antes de Impuestos',
						'font-weight: bold;',
						NULL
					FROM DUAL
				)
			), VALORES AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					E.MES,
					E.CODIGO_DIVISION,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.CON_CARDINALIDAD_CTA_VALOR(E.COD_CTA, D.VERSION, E.DB_HB, SAF.APX_FNC_CONVERSION_MONEDAS(NVL(E.VALOR, 0), 1, V_MONEDA, 1, NULL))
							ELSE
								0
						END
					)), 0) AS VALOR
				FROM ESTRUCTURA A
				LEFT JOIN SAF.ASOCIACION_PLANTILLA_NOTA_VERSION B ON
					B.ID_PLANTILLA = A.ID_REGISTRO AND
					B.VERSION = V_VERSION
				LEFT JOIN SAF.CON_PLANTILLA_NOTAS C ON
					C.ID = B.ID_NOTA
				LEFT JOIN SAF.CON_DETALLE_PLANTILLA_NOTAS D ON
					D.ID_PLANTILLA = C.ID AND
					D.VERSION = B.VERSION AND
					D.ES_AGRUPADOR = 'N'
				LEFT JOIN SAF.CON_POLIZASD E ON
					E.COD_CTA = D.COD_CTA AND
					E.CODIGO_GASTO = D.CODIGO_GASTO AND
					E.COD_TIPOL != 30 AND
					E.EJERCICIO = V_ANIO AND
					E.MES BETWEEN V_MES_INICIO AND V_MES_FIN AND
					E.CODIGO_EMPRESA > 99
				WHERE E.CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_TABLE)
				AND E.CODIGO_DIVISION  NOT IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52)
				GROUP BY A.ID, A.NOMBRE, A.CLASE, E.MES, E.CODIGO_DIVISION
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					B.MES_FIN MES,
					C.CODIGO_DIVISION,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.APX_FNC_CONVERSION_MONEDAS(NVL(B.VALOR, 0), B.MONEDA_ORIGEN, V_MONEDA, B.VALOR_CAMBIO, NULL)
							ELSE
								0
						END
					)), 0) AS VALOR
				FROM ESTRUCTURA A
				LEFT JOIN SAF.REPORTES_FINANCIEROS_INTEGRO B 
					ON B.ID_PLANTILLA_NOTA = A.ID_REGISTRO 
					AND B.TIPO_REPORTE = 6
					AND B.MES_FIN BETWEEN V_MES_INICIO AND V_MES_FIN
					AND B.ANIO = V_ANIO
					AND B.CONCEPTO IS NULL
				LEFT JOIN SAF.GRAL_SECCIONES C
					ON C.CODIGO_SECCION = B.CODIGO_EMPRESA
				WHERE C.CODIGO_DIVISION IN
				(
					SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52
				)
				GROUP BY A.ID, A.NOMBRE, A.CLASE, B.MES_FIN, C.CODIGO_DIVISION
			) ,VALORES_CALCULADOS AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					CODIGO_DIVISION,
					SUM(VALOR) VALOR
				FROM
				(
					SELECT 
						ID,
						NOMBRE,
						CLASE,
						MES,
						CODIGO_DIVISION,
						VALOR
					FROM VALORES
					WHERE CLASE IS NULL
					UNION ALL
					SELECT
						A.ID,
						A.NOMBRE,
						A.CLASE,
						M.NUMERO MES,
						D.CODIGO_DIVISION CODIGO_DIVISION,
						0 VALOR
					FROM ESTRUCTURA A
					CROSS JOIN MESES_TABLE M
					LEFT JOIN DIVISIONES_TABLE D ON D.CODIGO_DIVISION IS NOT NULL
					WHERE M.NUMERO >= V_MES_INICIO AND M.NUMERO <= V_MES_FIN
					UNION ALL
					SELECT
						A.ID,
						A.NOMBRE,
						A.CLASE,
						14 MES,
						D.CODIGO_DIVISION CODIGO_DIVISION,
						0 VALOR
					FROM ESTRUCTURA A
					LEFT JOIN DIVISIONES_TABLE D ON D.CODIGO_DIVISION IS NOT NULL
				)
				GROUP BY ID, NOMBRE, CLASE, MES, CODIGO_DIVISION
			), DATOS_CALCULADOS AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					A.VALOR
				FROM VALORES_CALCULADOS A
				WHERE A.CODIGO_DIVISION IS NOT NULL
				AND A.MES IS NOT NULL
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								NVL(SUM(B.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(B.VALOR), 0) + NVL(SUM(I.VALOR), 0)
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								NVL(SUM(C.VALOR), 0)
							WHEN A.ID = 5 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0)
							WHEN A.ID = 7 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0)
							WHEN A.ID = 10 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 12 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(H.VALOR), 0) + NVL(SUM(HH.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM VALORES_CALCULADOS A
				LEFT JOIN VALORES_CALCULADOS B
					ON B.ID = 1 
					AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND B.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS C
					ON C.ID = 2
					AND C.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND C.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS D
					ON D.ID = 4
					AND D.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND D.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS E
					ON E.ID = 6
					AND E.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND E.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS F
					ON F.ID = 8
					AND F.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND F.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS FF
					ON FF.ID = 9
					AND FF.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND FF.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS G
					ON G.ID = 11
					AND G.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND G.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS H
					ON H.ID = 14
					AND H.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND H.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS HH
					ON HH.ID = 15
					AND HH.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND HH.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS I
					ON I.ID = 13
					AND I.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND I.MES = A.MES
				WHERE A.CODIGO_DIVISION IS NOT NULL
				AND A.MES IS NOT NULL
				AND A.ID IN (3,5,7,10,12,16)
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION
			), ACUMULADO_EMPRESAS AS 
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					13 MES,
					CODIGO_DIVISION,
					(
						CASE WHEN ID IN (1,2,4,6,8,9,11,13,14,15) THEN
							SUM(VALOR)
						ELSE
							0
						END
					) VALOR
				FROM DATOS_CALCULADOS
				WHERE MES <= 12
				GROUP BY ID, NOMBRE, CLASE, CODIGO_DIVISION
			), CALULO_ACUMULADO_EMPRESAS AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								NVL(SUM(B.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(B.VALOR), 0) + NVL(SUM(I.VALOR), 0)
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								NVL(SUM(C.VALOR), 0)
							WHEN A.ID = 5 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0)
							WHEN A.ID = 7 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0)
							WHEN A.ID = 10 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 12 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(H.VALOR), 0) + NVL(SUM(HH.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM ACUMULADO_EMPRESAS A
				LEFT JOIN ACUMULADO_EMPRESAS B
					ON B.ID = 1 
					AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND B.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS C
					ON C.ID = 2
					AND C.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND C.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS D
					ON D.ID = 4
					AND D.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND D.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS E
					ON E.ID = 6
					AND E.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND E.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS F
					ON F.ID = 8
					AND F.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND F.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS FF
					ON FF.ID = 9
					AND FF.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND FF.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS G
					ON G.ID = 11
					AND G.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND G.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS H
					ON H.ID = 14
					AND H.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND H.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS HH
					ON HH.ID = 15
					AND HH.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND HH.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS I
					ON I.ID = 13
					AND I.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND I.MES = A.MES
				WHERE A.CODIGO_DIVISION IS NOT NULL
				AND A.MES IS NOT NULL
				AND A.ID IN (3,5,7,10,12,16)
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION
			), CALULOS_ACUMULADO_EMPRESAS_UNION AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					CODIGO_DIVISION,
					SUM(VALOR) VALOR,
					(
						CASE 
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_50) 
							THEN
								17
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_51) 
							THEN
								19
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52) 
							THEN
								21
							ELSE
								23
						END
					) BLOQUE
				FROM
				(
					SELECT
						ID,
						NOMBRE,
						CLASE,
						MES,
						CODIGO_DIVISION,
						VALOR
					FROM ACUMULADO_EMPRESAS
					UNION ALL
					SELECT
						ID,
						NOMBRE,
						CLASE,
						MES,
						CODIGO_DIVISION,
						VALOR
					FROM CALULO_ACUMULADO_EMPRESAS
				)
				GROUP BY ID, NOMBRE, CLASE, MES, CODIGO_DIVISION
			), CALULOS_ACUMULADO_PORCENTAJE_EMPRESAS AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					(
						CASE WHEN A.ID != 1 THEN
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = 1
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = A.ID
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = 1
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0)) * 100
							ELSE
								0
							END
						ELSE
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = 1
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID IN (2,4,6,8,9,11,13,14,15,16)
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = 1
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0)) * 100
							ELSE
								0
							END
						END
					) VALOR
				FROM VALORES_CALCULADOS A
				WHERE A.MES = 14
			), OTROS_INGRESOS_GASTOS AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					1 MES,
					NULL CODIGO_DIVISION,
					SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.CON_CARDINALIDAD_CTA_VALOR(E.COD_CTA, D.VERSION, E.DB_HB, SAF.APX_FNC_CONVERSION_MONEDAS(NVL(E.VALOR, 0), 1, V_MONEDA, 1, NULL))
							ELSE
								0
						END
					)) AS VALOR,
					16 BLOQUE
				FROM ESTRUCTURA A
				LEFT JOIN SAF.ASOCIACION_PLANTILLA_NOTA_VERSION B ON
					B.ID_PLANTILLA = A.ID_REGISTRO AND
					B.VERSION = V_VERSION
				LEFT JOIN SAF.CON_PLANTILLA_NOTAS C ON
					C.ID = B.ID_NOTA
				LEFT JOIN SAF.CON_DETALLE_PLANTILLA_NOTAS D ON
					D.ID_PLANTILLA = C.ID AND
					D.VERSION = B.VERSION AND
					D.ES_AGRUPADOR = 'N'
				LEFT JOIN SAF.CON_POLIZASD E ON
					E.COD_CTA = D.COD_CTA AND
					E.CODIGO_GASTO = D.CODIGO_GASTO AND
					E.COD_TIPOL != 30 AND
					E.EJERCICIO = V_ANIO AND
					E.MES BETWEEN V_MES_INICIO AND V_MES_FIN AND
					E.CODIGO_EMPRESA > 99
				WHERE E.CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_53)
				GROUP BY A.ID, A.NOMBRE, A.CLASE
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					1 MES,
					NULL CODIGO_DIVISION,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.APX_FNC_CONVERSION_MONEDAS(NVL(B.VALOR, 0), B.MONEDA_ORIGEN, V_MONEDA, B.VALOR_CAMBIO, NULL)
							ELSE
								0
						END
					)), 0) AS VALOR,
					16 BLOQUE
				FROM ESTRUCTURA A
				LEFT JOIN SAF.REPORTES_FINANCIEROS_INTEGRO B 
					ON B.ID_PLANTILLA_NOTA = A.ID_REGISTRO 
					AND B.TIPO_REPORTE = 6
					AND B.MES_FIN BETWEEN V_MES_INICIO AND V_MES_FIN
					AND B.ANIO = V_ANIO
					AND B.CONCEPTO IS NULL
				LEFT JOIN SAF.GRAL_SECCIONES C
					ON C.CODIGO_SECCION = B.CODIGO_EMPRESA
				WHERE C.CODIGO_DIVISION IN
				(
					SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_53
				)
				GROUP BY A.ID, A.NOMBRE, A.CLASE, B.MES_FIN
			), OTROS_INGRESOS_GASTOS_VALORES AS 
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					CODIGO_DIVISION,
					NVL(SUM(VALOR), 0) VALOR
				FROM
				(
					SELECT 
						ID,
						NOMBRE,
						CLASE,
						1 MES,
						NULL CODIGO_DIVISION,
						NVL(SUM(VALOR), 0) VALOR
					FROM OTROS_INGRESOS_GASTOS
					WHERE CLASE IS NULL
					GROUP BY
						ID,
						NOMBRE,
						CLASE
					UNION ALL
					SELECT
						A.ID,
						A.NOMBRE,
						A.CLASE,
						1 MES,
						NULL CODIGO_DIVISION,
						0 VALOR
					FROM ESTRUCTURA A
				)
				GROUP BY ID, NOMBRE, CLASE, MES, CODIGO_DIVISION
			), OTROS_INGRESOS_GASTOS_TOTALES AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								NVL(SUM(B.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(B.VALOR), 0) + NVL(SUM(I.VALOR), 0)
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								NVL(SUM(C.VALOR), 0)
							WHEN A.ID = 5 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0)
							WHEN A.ID = 7 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0)
							WHEN A.ID = 10 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 12 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(H.VALOR), 0) + NVL(SUM(HH.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM OTROS_INGRESOS_GASTOS_VALORES A
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES B
					ON B.ID = 1 
					AND B.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES C
					ON C.ID = 2
					AND C.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES D
					ON D.ID = 4
					AND D.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES E
					ON E.ID = 6
					AND E.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES F
					ON F.ID = 8
					AND F.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES FF
					ON FF.ID = 9
					AND FF.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES G
					ON G.ID = 11
					AND G.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES H
					ON H.ID = 14
					AND H.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES HH
					ON HH.ID = 15
					AND HH.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES I
					ON I.ID = 13
					AND I.MES = A.MES
				WHERE A.ID IN (3,5,7,10,12,16)
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION
			), SUMA_BLOQUES AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					(
						CASE
							WHEN ID IN (3,5,7,10,12,16) THEN
								0
							ELSE
								VALOR
						END
					) VALOR,
					BLOQUE
				FROM CALULOS_ACUMULADO_EMPRESAS_UNION
				WHERE CODIGO_DIVISION IN
				(
					SELECT CODIGO_DIVISION FROM DIVISIONES_TABLE
				)
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								NVL((B.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL((B.VALOR), 0) + NVL((I.VALOR), 0)
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								NVL((C.VALOR), 0)
							WHEN A.ID = 5 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0)
							WHEN A.ID = 7 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0) + NVL((E.VALOR), 0)
							WHEN A.ID = 10 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0) + NVL((E.VALOR), 0) + NVL((F.VALOR), 0) + NVL((FF.VALOR), 0)
							WHEN A.ID = 12 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0) + NVL((E.VALOR), 0) + NVL((F.VALOR), 0) + NVL((G.VALOR), 0) + NVL((FF.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0) + NVL((E.VALOR), 0) + NVL((F.VALOR), 0) + NVL((G.VALOR), 0) + NVL((H.VALOR), 0) + NVL((HH.VALOR), 0) + NVL((FF.VALOR), 0)
							ELSE
								0
							END
						), 0)
					) VALOR,
					A.BLOQUE
				FROM 
				(
					SELECT
						AA.ID,
						AA.NOMBRE,
						AA.CLASE,
						AA.BLOQUE,
						AA.CODIGO_DIVISION
					FROM CALULOS_ACUMULADO_EMPRESAS_UNION AA
					WHERE AA.ID IN (3,5,7,10,12,16)
					GROUP BY AA.ID, AA.NOMBRE, AA.CLASE, AA.BLOQUE, AA.CODIGO_DIVISION
				) A
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION B
					ON B.ID = 1
					AND B.BLOQUE = A.BLOQUE
					AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION C
					ON C.ID = 2
					AND C.BLOQUE = A.BLOQUE
					AND C.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION D
					ON D.ID = 4
					AND D.BLOQUE = A.BLOQUE
					AND D.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION E
					ON E.ID = 6
					AND E.BLOQUE = A.BLOQUE
					AND E.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION F
					ON F.ID = 8
					AND F.BLOQUE = A.BLOQUE
					AND F.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION FF
					ON FF.ID = 9
					AND FF.BLOQUE = A.BLOQUE
					AND FF.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION G
					ON G.ID = 11
					AND G.BLOQUE = A.BLOQUE
					AND G.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION H
					ON H.ID = 14
					AND H.BLOQUE = A.BLOQUE
					AND H.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION HH
					ON HH.ID = 15
					AND HH.BLOQUE = A.BLOQUE
					AND HH.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION I
					ON I.ID = 13
					AND I.BLOQUE = A.BLOQUE
					AND I.CODIGO_DIVISION = A.CODIGO_DIVISION
			), SUMA_BLOQUES_PORCENTAJE AS 
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						CASE WHEN A.ID != 1 THEN
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = 1
									AND B.BLOQUE = A.BLOQUE
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = A.ID
									AND B.BLOQUE = A.BLOQUE
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = 1
									AND B.BLOQUE = A.BLOQUE
								), 0)) * 100
							ELSE
								0
							END
						ELSE
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = 1
									AND B.BLOQUE = A.BLOQUE
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID IN (2,4,6,8,9,11,13,14,15,16)
									AND B.BLOQUE = A.BLOQUE
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = 1
									AND B.BLOQUE = A.BLOQUE
								), 0)) * 100
							ELSE
								0
							END
						END
					) VALOR,
					A.BLOQUE
				FROM SUMA_BLOQUES A
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.BLOQUE
			), SUMA_SUB_TOTAL AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					SUM(A.VALOR) VALOR
				FROM SUMA_BLOQUES A
				GROUP BY A.ID, A.NOMBRE, A.CLASE
				UNION ALL
				SELECT 
					ID,
					NOMBRE,
					CLASE,
					SUM(VALOR) VALOR
				FROM OTROS_INGRESOS_GASTOS_VALORES
				GROUP BY ID, NOMBRE, CLASE
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					SUM(VALOR) VALOR
				FROM OTROS_INGRESOS_GASTOS_TOTALES
				GROUP BY ID, NOMBRE, CLASE
			), SUMA_SUB_TOTAL_PORCENTAJE AS 
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						CASE WHEN A.ID != 1 THEN
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = 1
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = A.ID
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = 1
								), 0)) * 100
							ELSE
								0
							END
						ELSE
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = 1
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID IN (2,4,6,8,9,11,13,14,15,16)
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = 1
								), 0)) * 100
							ELSE
								0
							END
						END
					) VALOR
				FROM SUMA_SUB_TOTAL A
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE
			), ELIMINACIONES AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.CON_CARDINALIDAD_CTA_VALOR(E.COD_CTA, D.VERSION, E.DB_HB, SAF.APX_FNC_CONVERSION_MONEDAS(NVL(E.VALOR, 0), 1, V_MONEDA, 1, NULL))
							ELSE
								0
						END
					)), 0) AS VALOR
				FROM ESTRUCTURA A
				LEFT JOIN SAF.ASOCIACION_PLANTILLA_NOTA_VERSION B ON
					B.ID_PLANTILLA = A.ID_REGISTRO AND
					B.VERSION = V_VERSION
				LEFT JOIN SAF.CON_PLANTILLA_NOTAS C ON
					C.ID = B.ID_NOTA
				LEFT JOIN SAF.CON_DETALLE_PLANTILLA_NOTAS D ON
					D.ID_PLANTILLA = C.ID AND
					D.VERSION = B.VERSION AND
					D.ES_AGRUPADOR = 'N'
				LEFT JOIN SAF.CON_POLIZASD E ON
					E.COD_CTA = D.COD_CTA AND
					E.CODIGO_GASTO = D.CODIGO_GASTO AND
					E.COD_TIPOL != 30 AND
					E.EJERCICIO = V_ANIO AND
					E.MES BETWEEN V_MES_INICIO AND V_MES_FIN AND
					E.CODIGO_EMPRESA > 99
				WHERE E.LIBRO = 5
				GROUP BY A.ID, A.NOMBRE, A.CLASE, E.MES, E.CODIGO_DIVISION
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.APX_FNC_CONVERSION_MONEDAS(NVL(B.VALOR, 0), B.MONEDA_ORIGEN, V_MONEDA, B.VALOR_CAMBIO, NULL)
							ELSE
								0
						END
					)), 0) AS VALOR
				FROM ESTRUCTURA A
				LEFT JOIN SAF.REPORTES_FINANCIEROS_INTEGRO B 
					ON B.ID_PLANTILLA_NOTA = A.ID_REGISTRO 
					AND B.TIPO_REPORTE = 6
					AND B.MES_FIN BETWEEN V_MES_INICIO AND V_MES_FIN
					AND B.ANIO = V_ANIO
				LEFT JOIN SAF.GRAL_SECCIONES C
					ON C.CODIGO_SECCION = B.CODIGO_EMPRESA
				WHERE B.CONCEPTO = 'ELIMINACION'
				GROUP BY A.ID, A.NOMBRE, A.CLASE, B.MES_FIN, C.CODIGO_DIVISION
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					0 VALOR
				FROM ESTRUCTURA A
			), SUMA_ELIMINACIONES AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					SUM(VALOR) VALOR
				FROM ELIMINACIONES
				GROUP BY ID, NOMBRE, CLASE
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID = 1)
							WHEN A.ID = 16 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (1,13))
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID = 2)
							WHEN A.ID = 5 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4))
							WHEN A.ID = 7 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4,6))
							WHEN A.ID = 10 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4,6,8,9))
							WHEN A.ID = 12 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4,6,8,9,11))
							WHEN A.ID = 16 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4,6,8,9,11,14,15))
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM 
				(
					SELECT
						AA.ID,
						AA.NOMBRE,
						AA.CLASE
					FROM ELIMINACIONES AA
					WHERE AA.ID IN (3,5,7,10,12,16)
					GROUP BY AA.ID, AA.NOMBRE, AA.CLASE
				) A
			), CONSOLIDADO_VALORES AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						NVL((SELECT SUM(B.VALOR) FROM SUMA_SUB_TOTAL B WHERE B.ID = A.ID), 0)
						-
						NVL((SELECT SUM(B.VALOR) FROM SUMA_ELIMINACIONES B WHERE B.ID = A.ID), 0)
					) VALOR
				FROM ESTRUCTURA A
			), CONSOLIDADO_VALORES_SUMA AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					(
						CASE
							WHEN ID IN (3,5,7,10,12,16) THEN
								0
							ELSE
								VALOR
						END
					) VALOR
				FROM CONSOLIDADO_VALORES
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID = 1)
							WHEN A.ID = 16 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (1,13))
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID = 2)
							WHEN A.ID = 5 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4))
							WHEN A.ID = 7 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4,6))
							WHEN A.ID = 10 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4,6,8,9))
							WHEN A.ID = 12 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4,6,8,9,11))
							WHEN A.ID = 16 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4,6,8,9,11,14,15))
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM 
				(
					SELECT
						AA.ID,
						AA.NOMBRE,
						AA.CLASE
					FROM CONSOLIDADO_VALORES AA
					WHERE AA.ID IN (3,5,7,10,12,16)
					GROUP BY AA.ID, AA.NOMBRE, AA.CLASE
				) A
			), CONSOLIDADO_VALORES_PORCENTAJE AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						CASE WHEN A.ID != 1 THEN
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = 1
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = A.ID
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = 1
								), 0)) * 100
							ELSE
								0
							END
						ELSE
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = 1
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID IN (2,4,6,8,9,11,13,14,15,16)
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = 1
								), 0)) * 100
							ELSE
								0
							END
						END
					) VALOR
				FROM CONSOLIDADO_VALORES_SUMA A
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE
			)
			SELECT
				ID,
				NOMBRE,
				CLASE,
				MES,
				CODIGO_DIVISION,
				SUM(VALOR) VALOR,
				BLOQUE
			FROM
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					('DIV-' || CODIGO_DIVISION) CODIGO_DIVISION,
					VALOR,
					(
						CASE 
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_50) 
							THEN
								18
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_51) 
							THEN
								20
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52) 
							THEN
								22
							ELSE
								23
						END
					) BLOQUE
				FROM DATOS_CALCULADOS
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					('DIV-' || CODIGO_DIVISION) CODIGO_DIVISION,
					VALOR,
					(
						CASE 
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_50) 
							THEN
								18
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_51) 
							THEN
								20
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52) 
							THEN
								22
							ELSE
								23
						END
					) BLOQUE
				FROM CALULOS_ACUMULADO_EMPRESAS_UNION
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					('DIV-' || CODIGO_DIVISION) CODIGO_DIVISION,
					VALOR,
					(
						CASE 
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_50) 
							THEN
								18
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_51) 
							THEN
								20
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52) 
							THEN
								22
							ELSE
								23
						END
					) BLOQUE
				FROM CALULOS_ACUMULADO_PORCENTAJE_EMPRESAS
				UNION ALL
				SELECT 
					ID,
					NOMBRE,
					CLASE,
					0.9 MES,
					'24' CODIGO_DIVISION,
					VALOR,
					16 BLOQUE
				FROM OTROS_INGRESOS_GASTOS_VALORES
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					0.9 MES,
					'24' CODIGO_DIVISION,
					VALOR,
					16 BLOQUE
				FROM OTROS_INGRESOS_GASTOS_TOTALES
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					13 MES,
					(
						CASE
							WHEN BLOQUE = 17 THEN
								'25'
							WHEN BLOQUE = 19 THEN
								'26'
							WHEN BLOQUE = 21 THEN
								'27'
							ELSE 
								'28'
						END
					) CODIGO_DIVISION,
					VALOR,
					BLOQUE
				FROM SUMA_BLOQUES
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					14 MES,
					(
						CASE
							WHEN BLOQUE = 17 THEN
								'25'
							WHEN BLOQUE = 19 THEN
								'26'
							WHEN BLOQUE = 21 THEN
								'27'
							ELSE 
								'28'
						END
					) CODIGO_DIVISION,
					VALOR,
					BLOQUE
				FROM SUMA_BLOQUES_PORCENTAJE
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					32 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM SUMA_SUB_TOTAL
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					33 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM SUMA_SUB_TOTAL_PORCENTAJE
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					31 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM SUMA_ELIMINACIONES
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					29 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM CONSOLIDADO_VALORES_SUMA
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					30 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM CONSOLIDADO_VALORES_PORCENTAJE
			) GROUP BY ID, NOMBRE, CLASE, MES, CODIGO_DIVISION, BLOQUE;
	
	CURSOR C_DATOS_HOMOLOGADAS IS
		WITH DIVISIONES_TABLE AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE IN (50,51,52)
			), MESES_TABLE AS 
			(
				SELECT LEVEL AS NUMERO
				FROM DUAL
				CONNECT BY LEVEL <= GREATEST(V_MES_FIN, 14)
			), DIVISIONES_REPORTE_50 AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE = 50
			), DIVISIONES_REPORTE_51 AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE = 51
			), DIVISIONES_REPORTE_52 AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE = 52
			), DIVISIONES_REPORTE_53 AS
			(
				SELECT
					DISTINCT
					B.CODIGO_DIVISION
				FROM SAF.REPORTES_FINANCIEROS_CONFIGURACION A
				INNER JOIN SAF.GRAL_SECCIONES B ON B.CODIGO_SECCION = A.ID_ASOCIACION
				WHERE A.TIPO_REPORTE = 53
			), ESTRUCTURA AS
			(
				SELECT
					ROWNUM ID,
					NOMBRE,
					CLASE,
					ID_REGISTRO
				FROM
				(
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID ID_REGISTRO
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'MargenBruto'
					UNION ALL
					SELECT
						'Margen Bruto',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'ResultadosEnOperacion'
					UNION ALL
					SELECT
						'Resultados En Operacion',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'Resultado'
					UNION ALL
					SELECT
						'Resultado',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'EBITDA'
					UNION ALL
					SELECT
						'EBITDA',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'ResultadosAntesOtrosIngresosGastos'
					UNION ALL
					SELECT
						'Resultados Antes de Otros Ingresos y Gastos',
						'font-weight: bold;',
						NULL
					FROM DUAL
					UNION ALL
					SELECT 
						NOMBRE,
						NULL CLASE,
						ID
					FROM SAF.PLANTILLA_ASIGNACION_NOTAS
					WHERE TIPO_REPORTE = 6
					AND ORDEN_1 = 'ResultadosAntesImpuestos'
					UNION ALL
					SELECT
						'Resultados Antes de Impuestos',
						'font-weight: bold;',
						NULL
					FROM DUAL
				)
			), VALORES AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					E.MES,
					E.CODIGO_DIVISION,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.CON_CARDINALIDAD_CTA_VALOR(E.COD_CTA_HOMOLOGADA, D.VERSION, E.DB_HB, SAF.APX_FNC_CONVERSION_MONEDAS(NVL(E.VALOR, 0), 1, V_MONEDA, 1, NULL))
							ELSE
								0
						END
					)), 0) AS VALOR
				FROM ESTRUCTURA A
				LEFT JOIN SAF.ASOCIACION_PLANTILLA_NOTA_VERSION B ON
					B.ID_PLANTILLA = A.ID_REGISTRO AND
					B.VERSION = V_VERSION
				LEFT JOIN SAF.CON_PLANTILLA_NOTAS C ON
					C.ID = B.ID_NOTA
				LEFT JOIN SAF.CON_DETALLE_PLANTILLA_NOTAS D ON
					D.ID_PLANTILLA = C.ID AND
					D.VERSION = B.VERSION AND
					D.ES_AGRUPADOR = 'N'
				LEFT JOIN SAF.CON_POLIZASD E ON
					E.COD_CTA_HOMOLOGADA = D.COD_CTA AND
					--E.CODIGO_GASTO = D.CODIGO_GASTO AND
					E.COD_TIPOL != 30 AND
					E.EJERCICIO = V_ANIO AND
					E.MES BETWEEN V_MES_INICIO AND V_MES_FIN AND
					E.CODIGO_EMPRESA > 99
				WHERE E.CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_TABLE)
				AND E.CODIGO_DIVISION  NOT IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52)
				GROUP BY A.ID, A.NOMBRE, A.CLASE, E.MES, E.CODIGO_DIVISION
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					B.MES_FIN MES,
					C.CODIGO_DIVISION,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.APX_FNC_CONVERSION_MONEDAS(NVL(B.VALOR, 0), B.MONEDA_ORIGEN, V_MONEDA, B.VALOR_CAMBIO, NULL)
							ELSE
								0
						END
					)), 0) AS VALOR
				FROM ESTRUCTURA A
				LEFT JOIN SAF.REPORTES_FINANCIEROS_INTEGRO B 
					ON B.ID_PLANTILLA_NOTA = A.ID_REGISTRO 
					AND B.TIPO_REPORTE = 6
					AND B.MES_FIN BETWEEN V_MES_INICIO AND V_MES_FIN
					AND B.ANIO = V_ANIO
					AND B.CONCEPTO IS NULL
				LEFT JOIN SAF.GRAL_SECCIONES C
					ON C.CODIGO_SECCION = B.CODIGO_EMPRESA
				WHERE C.CODIGO_DIVISION IN
				(
					SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52
				)
				GROUP BY A.ID, A.NOMBRE, A.CLASE, B.MES_FIN, C.CODIGO_DIVISION
			) ,VALORES_CALCULADOS AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					CODIGO_DIVISION,
					SUM(VALOR) VALOR
				FROM
				(
					SELECT 
						ID,
						NOMBRE,
						CLASE,
						MES,
						CODIGO_DIVISION,
						VALOR
					FROM VALORES
					WHERE CLASE IS NULL
					UNION ALL
					SELECT
						A.ID,
						A.NOMBRE,
						A.CLASE,
						M.NUMERO MES,
						D.CODIGO_DIVISION CODIGO_DIVISION,
						0 VALOR
					FROM ESTRUCTURA A
					CROSS JOIN MESES_TABLE M
					LEFT JOIN DIVISIONES_TABLE D ON D.CODIGO_DIVISION IS NOT NULL
					WHERE M.NUMERO >= V_MES_INICIO AND M.NUMERO <= V_MES_FIN
					UNION ALL
					SELECT
						A.ID,
						A.NOMBRE,
						A.CLASE,
						14 MES,
						D.CODIGO_DIVISION CODIGO_DIVISION,
						0 VALOR
					FROM ESTRUCTURA A
					LEFT JOIN DIVISIONES_TABLE D ON D.CODIGO_DIVISION IS NOT NULL
				)
				GROUP BY ID, NOMBRE, CLASE, MES, CODIGO_DIVISION
			), DATOS_CALCULADOS AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					A.VALOR
				FROM VALORES_CALCULADOS A
				WHERE A.CODIGO_DIVISION IS NOT NULL
				AND A.MES IS NOT NULL
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								NVL(SUM(B.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(B.VALOR), 0) + NVL(SUM(I.VALOR), 0)
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								NVL(SUM(C.VALOR), 0)
							WHEN A.ID = 5 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0)
							WHEN A.ID = 7 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0)
							WHEN A.ID = 10 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 12 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(H.VALOR), 0) + NVL(SUM(HH.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM VALORES_CALCULADOS A
				LEFT JOIN VALORES_CALCULADOS B
					ON B.ID = 1 
					AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND B.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS C
					ON C.ID = 2
					AND C.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND C.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS D
					ON D.ID = 4
					AND D.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND D.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS E
					ON E.ID = 6
					AND E.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND E.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS F
					ON F.ID = 8
					AND F.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND F.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS FF
					ON FF.ID = 9
					AND FF.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND FF.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS G
					ON G.ID = 11
					AND G.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND G.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS H
					ON H.ID = 14
					AND H.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND H.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS HH
					ON HH.ID = 15
					AND HH.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND HH.MES = A.MES
				LEFT JOIN VALORES_CALCULADOS I
					ON I.ID = 13
					AND I.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND I.MES = A.MES
				WHERE A.CODIGO_DIVISION IS NOT NULL
				AND A.MES IS NOT NULL
				AND A.ID IN (3,5,7,10,12,16)
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION
			), ACUMULADO_EMPRESAS AS 
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					13 MES,
					CODIGO_DIVISION,
					(
						CASE WHEN ID IN (1,2,4,6,8,9,11,13,14,15) THEN
							SUM(VALOR)
						ELSE
							0
						END
					) VALOR
				FROM DATOS_CALCULADOS
				WHERE MES <= 12
				GROUP BY ID, NOMBRE, CLASE, CODIGO_DIVISION
			), CALULO_ACUMULADO_EMPRESAS AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								NVL(SUM(B.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(B.VALOR), 0) + NVL(SUM(I.VALOR), 0)
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								NVL(SUM(C.VALOR), 0)
							WHEN A.ID = 5 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0)
							WHEN A.ID = 7 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0)
							WHEN A.ID = 10 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 12 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(H.VALOR), 0) + NVL(SUM(HH.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM ACUMULADO_EMPRESAS A
				LEFT JOIN ACUMULADO_EMPRESAS B
					ON B.ID = 1 
					AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND B.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS C
					ON C.ID = 2
					AND C.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND C.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS D
					ON D.ID = 4
					AND D.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND D.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS E
					ON E.ID = 6
					AND E.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND E.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS F
					ON F.ID = 8
					AND F.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND F.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS FF
					ON FF.ID = 9
					AND FF.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND FF.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS G
					ON G.ID = 11
					AND G.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND G.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS H
					ON H.ID = 14
					AND H.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND H.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS HH
					ON HH.ID = 15
					AND HH.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND HH.MES = A.MES
				LEFT JOIN ACUMULADO_EMPRESAS I
					ON I.ID = 13
					AND I.CODIGO_DIVISION = A.CODIGO_DIVISION
					AND I.MES = A.MES
				WHERE A.CODIGO_DIVISION IS NOT NULL
				AND A.MES IS NOT NULL
				AND A.ID IN (3,5,7,10,12,16)
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION
			), CALULOS_ACUMULADO_EMPRESAS_UNION AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					CODIGO_DIVISION,
					SUM(VALOR) VALOR,
					(
						CASE 
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_50) 
							THEN
								17
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_51) 
							THEN
								19
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52) 
							THEN
								21
							ELSE
								23
						END
					) BLOQUE
				FROM
				(
					SELECT
						ID,
						NOMBRE,
						CLASE,
						MES,
						CODIGO_DIVISION,
						VALOR
					FROM ACUMULADO_EMPRESAS
					UNION ALL
					SELECT
						ID,
						NOMBRE,
						CLASE,
						MES,
						CODIGO_DIVISION,
						VALOR
					FROM CALULO_ACUMULADO_EMPRESAS
				)
				GROUP BY ID, NOMBRE, CLASE, MES, CODIGO_DIVISION
			), CALULOS_ACUMULADO_PORCENTAJE_EMPRESAS AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					(
						CASE WHEN A.ID != 1 THEN
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = 1
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = A.ID
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = 1
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0)) * 100
							ELSE
								0
							END
						ELSE
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = 1
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID IN (2,4,6,8,9,11,13,14,15,16)
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM CALULOS_ACUMULADO_EMPRESAS_UNION B
									WHERE B.ID = 1
									AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
								), 0)) * 100
							ELSE
								0
							END
						END
					) VALOR
				FROM VALORES_CALCULADOS A
				WHERE A.MES = 14
			), OTROS_INGRESOS_GASTOS AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					1 MES,
					NULL CODIGO_DIVISION,
					SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.CON_CARDINALIDAD_CTA_VALOR(E.COD_CTA_HOMOLOGADA, D.VERSION, E.DB_HB, SAF.APX_FNC_CONVERSION_MONEDAS(NVL(E.VALOR, 0), 1, V_MONEDA, 1, NULL))
							ELSE
								0
						END
					)) AS VALOR,
					16 BLOQUE
				FROM ESTRUCTURA A
				LEFT JOIN SAF.ASOCIACION_PLANTILLA_NOTA_VERSION B ON
					B.ID_PLANTILLA = A.ID_REGISTRO AND
					B.VERSION = V_VERSION
				LEFT JOIN SAF.CON_PLANTILLA_NOTAS C ON
					C.ID = B.ID_NOTA
				LEFT JOIN SAF.CON_DETALLE_PLANTILLA_NOTAS D ON
					D.ID_PLANTILLA = C.ID AND
					D.VERSION = B.VERSION AND
					D.ES_AGRUPADOR = 'N'
				LEFT JOIN SAF.CON_POLIZASD E ON
					E.COD_CTA_HOMOLOGADA = D.COD_CTA AND
					--E.CODIGO_GASTO = D.CODIGO_GASTO AND
					E.COD_TIPOL != 30 AND
					E.EJERCICIO = V_ANIO AND
					E.MES BETWEEN V_MES_INICIO AND V_MES_FIN AND
					E.CODIGO_EMPRESA > 99
				WHERE E.CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_53)
				GROUP BY A.ID, A.NOMBRE, A.CLASE
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					1 MES,
					NULL CODIGO_DIVISION,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.APX_FNC_CONVERSION_MONEDAS(NVL(B.VALOR, 0), B.MONEDA_ORIGEN, V_MONEDA, B.VALOR_CAMBIO, NULL)
							ELSE
								0
						END
					)), 0) AS VALOR,
					16 BLOQUE
				FROM ESTRUCTURA A
				LEFT JOIN SAF.REPORTES_FINANCIEROS_INTEGRO B 
					ON B.ID_PLANTILLA_NOTA = A.ID_REGISTRO 
					AND B.TIPO_REPORTE = 6
					AND B.MES_FIN BETWEEN V_MES_INICIO AND V_MES_FIN
					AND B.ANIO = V_ANIO
					AND B.CONCEPTO IS NULL
				LEFT JOIN SAF.GRAL_SECCIONES C
					ON C.CODIGO_SECCION = B.CODIGO_EMPRESA
				WHERE C.CODIGO_DIVISION IN
				(
					SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_53
				)
				GROUP BY A.ID, A.NOMBRE, A.CLASE, B.MES_FIN
			), OTROS_INGRESOS_GASTOS_VALORES AS 
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					CODIGO_DIVISION,
					NVL(SUM(VALOR), 0) VALOR
				FROM
				(
					SELECT 
						ID,
						NOMBRE,
						CLASE,
						1 MES,
						NULL CODIGO_DIVISION,
						NVL(SUM(VALOR), 0) VALOR
					FROM OTROS_INGRESOS_GASTOS
					WHERE CLASE IS NULL
					GROUP BY
						ID,
						NOMBRE,
						CLASE
					UNION ALL
					SELECT
						A.ID,
						A.NOMBRE,
						A.CLASE,
						1 MES,
						NULL CODIGO_DIVISION,
						0 VALOR
					FROM ESTRUCTURA A
				)
				GROUP BY ID, NOMBRE, CLASE, MES, CODIGO_DIVISION
			), OTROS_INGRESOS_GASTOS_TOTALES AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								NVL(SUM(B.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(B.VALOR), 0) + NVL(SUM(I.VALOR), 0)
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								NVL(SUM(C.VALOR), 0)
							WHEN A.ID = 5 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0)
							WHEN A.ID = 7 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0)
							WHEN A.ID = 10 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 12 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL(SUM(C.VALOR), 0) + NVL(SUM(D.VALOR), 0) + NVL(SUM(E.VALOR), 0) + NVL(SUM(F.VALOR), 0) + NVL(SUM(G.VALOR), 0) + NVL(SUM(H.VALOR), 0) + NVL(SUM(HH.VALOR), 0) + NVL(SUM(FF.VALOR), 0)
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM OTROS_INGRESOS_GASTOS_VALORES A
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES B
					ON B.ID = 1 
					AND B.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES C
					ON C.ID = 2
					AND C.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES D
					ON D.ID = 4
					AND D.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES E
					ON E.ID = 6
					AND E.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES F
					ON F.ID = 8
					AND F.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES FF
					ON FF.ID = 9
					AND FF.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES G
					ON G.ID = 11
					AND G.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES H
					ON H.ID = 14
					AND H.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES HH
					ON HH.ID = 15
					AND HH.MES = A.MES
				LEFT JOIN OTROS_INGRESOS_GASTOS_VALORES I
					ON I.ID = 13
					AND I.MES = A.MES
				WHERE A.ID IN (3,5,7,10,12,16)
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.MES,
					A.CODIGO_DIVISION
			), SUMA_BLOQUES AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					(
						CASE
							WHEN ID IN (3,5,7,10,12,16) THEN
								0
							ELSE
								VALOR
						END
					) VALOR,
					BLOQUE
				FROM CALULOS_ACUMULADO_EMPRESAS_UNION
				WHERE CODIGO_DIVISION IN
				(
					SELECT CODIGO_DIVISION FROM DIVISIONES_TABLE
				)
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								NVL((B.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL((B.VALOR), 0) + NVL((I.VALOR), 0)
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								NVL((C.VALOR), 0)
							WHEN A.ID = 5 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0)
							WHEN A.ID = 7 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0) + NVL((E.VALOR), 0)
							WHEN A.ID = 10 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0) + NVL((E.VALOR), 0) + NVL((F.VALOR), 0) + NVL((FF.VALOR), 0)
							WHEN A.ID = 12 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0) + NVL((E.VALOR), 0) + NVL((F.VALOR), 0) + NVL((G.VALOR), 0) + NVL((FF.VALOR), 0)
							WHEN A.ID = 16 THEN
								NVL((C.VALOR), 0) + NVL((D.VALOR), 0) + NVL((E.VALOR), 0) + NVL((F.VALOR), 0) + NVL((G.VALOR), 0) + NVL((H.VALOR), 0) + NVL((HH.VALOR), 0) + NVL((FF.VALOR), 0)
							ELSE
								0
							END
						), 0)
					) VALOR,
					A.BLOQUE
				FROM 
				(
					SELECT
						AA.ID,
						AA.NOMBRE,
						AA.CLASE,
						AA.BLOQUE,
						AA.CODIGO_DIVISION
					FROM CALULOS_ACUMULADO_EMPRESAS_UNION AA
					WHERE AA.ID IN (3,5,7,10,12,16)
					GROUP BY AA.ID, AA.NOMBRE, AA.CLASE, AA.BLOQUE, AA.CODIGO_DIVISION
				) A
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION B
					ON B.ID = 1
					AND B.BLOQUE = A.BLOQUE
					AND B.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION C
					ON C.ID = 2
					AND C.BLOQUE = A.BLOQUE
					AND C.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION D
					ON D.ID = 4
					AND D.BLOQUE = A.BLOQUE
					AND D.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION E
					ON E.ID = 6
					AND E.BLOQUE = A.BLOQUE
					AND E.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION F
					ON F.ID = 8
					AND F.BLOQUE = A.BLOQUE
					AND F.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION FF
					ON FF.ID = 9
					AND FF.BLOQUE = A.BLOQUE
					AND FF.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION G
					ON G.ID = 11
					AND G.BLOQUE = A.BLOQUE
					AND G.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION H
					ON H.ID = 14
					AND H.BLOQUE = A.BLOQUE
					AND H.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION HH
					ON HH.ID = 15
					AND HH.BLOQUE = A.BLOQUE
					AND HH.CODIGO_DIVISION = A.CODIGO_DIVISION
				LEFT JOIN CALULOS_ACUMULADO_EMPRESAS_UNION I
					ON I.ID = 13
					AND I.BLOQUE = A.BLOQUE
					AND I.CODIGO_DIVISION = A.CODIGO_DIVISION
			), SUMA_BLOQUES_PORCENTAJE AS 
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						CASE WHEN A.ID != 1 THEN
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = 1
									AND B.BLOQUE = A.BLOQUE
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = A.ID
									AND B.BLOQUE = A.BLOQUE
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = 1
									AND B.BLOQUE = A.BLOQUE
								), 0)) * 100
							ELSE
								0
							END
						ELSE
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = 1
									AND B.BLOQUE = A.BLOQUE
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID IN (2,4,6,8,9,11,13,14,15,16)
									AND B.BLOQUE = A.BLOQUE
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_BLOQUES B
									WHERE B.ID = 1
									AND B.BLOQUE = A.BLOQUE
								), 0)) * 100
							ELSE
								0
							END
						END
					) VALOR,
					A.BLOQUE
				FROM SUMA_BLOQUES A
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE,
					A.BLOQUE
			), SUMA_SUB_TOTAL AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					SUM(A.VALOR) VALOR
				FROM SUMA_BLOQUES A
				GROUP BY A.ID, A.NOMBRE, A.CLASE
				UNION ALL
				SELECT 
					ID,
					NOMBRE,
					CLASE,
					SUM(VALOR) VALOR
				FROM OTROS_INGRESOS_GASTOS_VALORES
				GROUP BY ID, NOMBRE, CLASE
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					SUM(VALOR) VALOR
				FROM OTROS_INGRESOS_GASTOS_TOTALES
				GROUP BY ID, NOMBRE, CLASE
			), SUMA_SUB_TOTAL_PORCENTAJE AS 
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						CASE WHEN A.ID != 1 THEN
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = 1
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = A.ID
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = 1
								), 0)) * 100
							ELSE
								0
							END
						ELSE
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = 1
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID IN (2,4,6,8,9,11,13,14,15,16)
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM SUMA_SUB_TOTAL B
									WHERE B.ID = 1
								), 0)) * 100
							ELSE
								0
							END
						END
					) VALOR
				FROM SUMA_SUB_TOTAL A
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE
			), ELIMINACIONES AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.CON_CARDINALIDAD_CTA_VALOR(E.COD_CTA_HOMOLOGADA, D.VERSION, E.DB_HB, SAF.APX_FNC_CONVERSION_MONEDAS(NVL(E.VALOR, 0), 1, V_MONEDA, 1, NULL))
							ELSE
								0
						END
					)), 0) AS VALOR
				FROM ESTRUCTURA A
				LEFT JOIN SAF.ASOCIACION_PLANTILLA_NOTA_VERSION B ON
					B.ID_PLANTILLA = A.ID_REGISTRO AND
					B.VERSION = V_VERSION
				LEFT JOIN SAF.CON_PLANTILLA_NOTAS C ON
					C.ID = B.ID_NOTA
				LEFT JOIN SAF.CON_DETALLE_PLANTILLA_NOTAS D ON
					D.ID_PLANTILLA = C.ID AND
					D.VERSION = B.VERSION AND
					D.ES_AGRUPADOR = 'N'
				LEFT JOIN SAF.CON_POLIZASD E ON
					E.COD_CTA_HOMOLOGADA = D.COD_CTA AND
					--E.CODIGO_GASTO = D.CODIGO_GASTO AND
					E.COD_TIPOL != 30 AND
					E.EJERCICIO = V_ANIO AND
					E.MES BETWEEN V_MES_INICIO AND V_MES_FIN AND
					E.CODIGO_EMPRESA > 99
				WHERE E.LIBRO = 5
				GROUP BY A.ID, A.NOMBRE, A.CLASE, E.MES, E.CODIGO_DIVISION
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					NVL(SUM((
						CASE
							WHEN A.ID NOT IN (3, 5, 7, 10, 12, 16) THEN
								SAF.APX_FNC_CONVERSION_MONEDAS(NVL(B.VALOR, 0), B.MONEDA_ORIGEN, V_MONEDA, B.VALOR_CAMBIO, NULL)
							ELSE
								0
						END
					)), 0) AS VALOR
				FROM ESTRUCTURA A
				LEFT JOIN SAF.REPORTES_FINANCIEROS_INTEGRO B 
					ON B.ID_PLANTILLA_NOTA = A.ID_REGISTRO 
					AND B.TIPO_REPORTE = 6
					AND B.MES_FIN BETWEEN V_MES_INICIO AND V_MES_FIN
					AND B.ANIO = V_ANIO
				LEFT JOIN SAF.GRAL_SECCIONES C
					ON C.CODIGO_SECCION = B.CODIGO_EMPRESA
				WHERE B.CONCEPTO = 'ELIMINACION'
				GROUP BY A.ID, A.NOMBRE, A.CLASE, B.MES_FIN, C.CODIGO_DIVISION
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					0 VALOR
				FROM ESTRUCTURA A
			), SUMA_ELIMINACIONES AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					SUM(VALOR) VALOR
				FROM ELIMINACIONES
				GROUP BY ID, NOMBRE, CLASE
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID = 1)
							WHEN A.ID = 16 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (1,13))
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID = 2)
							WHEN A.ID = 5 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4))
							WHEN A.ID = 7 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4,6))
							WHEN A.ID = 10 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4,6,8,9))
							WHEN A.ID = 12 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4,6,8,9,11))
							WHEN A.ID = 16 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM ELIMINACIONES B WHERE B.ID IN (2,4,6,8,9,11,14,15))
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM 
				(
					SELECT
						AA.ID,
						AA.NOMBRE,
						AA.CLASE
					FROM ELIMINACIONES AA
					WHERE AA.ID IN (3,5,7,10,12,16)
					GROUP BY AA.ID, AA.NOMBRE, AA.CLASE
				) A
			), CONSOLIDADO_VALORES AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						NVL((SELECT SUM(B.VALOR) FROM SUMA_SUB_TOTAL B WHERE B.ID = A.ID), 0)
						-
						NVL((SELECT SUM(B.VALOR) FROM SUMA_ELIMINACIONES B WHERE B.ID = A.ID), 0)
					) VALOR
				FROM ESTRUCTURA A
			), CONSOLIDADO_VALORES_SUMA AS
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					(
						CASE
							WHEN ID IN (3,5,7,10,12,16) THEN
								0
							ELSE
								VALOR
						END
					) VALOR
				FROM CONSOLIDADO_VALORES
				UNION ALL
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						NVL((
							CASE
							WHEN A.ID IN (3,5,7,10,12) THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID = 1)
							WHEN A.ID = 16 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (1,13))
							ELSE
								0
							END
						), 0)
						-
						NVL((
							CASE
							WHEN A.ID = 3 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID = 2)
							WHEN A.ID = 5 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4))
							WHEN A.ID = 7 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4,6))
							WHEN A.ID = 10 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4,6,8,9))
							WHEN A.ID = 12 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4,6,8,9,11))
							WHEN A.ID = 16 THEN
								(SELECT NVL(SUM(B.VALOR), 0) FROM CONSOLIDADO_VALORES B WHERE B.ID IN (2,4,6,8,9,11,14,15))
							ELSE
								0
							END
						), 0)
					) VALOR
				FROM 
				(
					SELECT
						AA.ID,
						AA.NOMBRE,
						AA.CLASE
					FROM CONSOLIDADO_VALORES AA
					WHERE AA.ID IN (3,5,7,10,12,16)
					GROUP BY AA.ID, AA.NOMBRE, AA.CLASE
				) A
			), CONSOLIDADO_VALORES_PORCENTAJE AS
			(
				SELECT
					A.ID,
					A.NOMBRE,
					A.CLASE,
					(
						CASE WHEN A.ID != 1 THEN
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = 1
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = A.ID
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = 1
								), 0)) * 100
							ELSE
								0
							END
						ELSE
							CASE
								WHEN NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = 1
								), 0) != 0 THEN
								(NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID IN (2,4,6,8,9,11,13,14,15,16)
								), 0)
								/
								NVL((
									SELECT
										SUM(B.VALOR)
									FROM CONSOLIDADO_VALORES_SUMA B
									WHERE B.ID = 1
								), 0)) * 100
							ELSE
								0
							END
						END
					) VALOR
				FROM CONSOLIDADO_VALORES_SUMA A
				GROUP BY
					A.ID,
					A.NOMBRE,
					A.CLASE
			)
			SELECT
				ID,
				NOMBRE,
				CLASE,
				MES,
				CODIGO_DIVISION,
				SUM(VALOR) VALOR,
				BLOQUE
			FROM
			(
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					('DIV-' || CODIGO_DIVISION) CODIGO_DIVISION,
					VALOR,
					(
						CASE 
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_50) 
							THEN
								18
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_51) 
							THEN
								20
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52) 
							THEN
								22
							ELSE
								23
						END
					) BLOQUE
				FROM DATOS_CALCULADOS
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					('DIV-' || CODIGO_DIVISION) CODIGO_DIVISION,
					VALOR,
					(
						CASE 
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_50) 
							THEN
								18
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_51) 
							THEN
								20
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52) 
							THEN
								22
							ELSE
								23
						END
					) BLOQUE
				FROM CALULOS_ACUMULADO_EMPRESAS_UNION
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					MES,
					('DIV-' || CODIGO_DIVISION) CODIGO_DIVISION,
					VALOR,
					(
						CASE 
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_50) 
							THEN
								18
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_51) 
							THEN
								20
							WHEN 
								CODIGO_DIVISION IN (SELECT CODIGO_DIVISION FROM DIVISIONES_REPORTE_52) 
							THEN
								22
							ELSE
								23
						END
					) BLOQUE
				FROM CALULOS_ACUMULADO_PORCENTAJE_EMPRESAS
				UNION ALL
				SELECT 
					ID,
					NOMBRE,
					CLASE,
					0.9 MES,
					'24' CODIGO_DIVISION,
					VALOR,
					16 BLOQUE
				FROM OTROS_INGRESOS_GASTOS_VALORES
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					0.9 MES,
					'24' CODIGO_DIVISION,
					VALOR,
					16 BLOQUE
				FROM OTROS_INGRESOS_GASTOS_TOTALES
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					13 MES,
					(
						CASE
							WHEN BLOQUE = 17 THEN
								'25'
							WHEN BLOQUE = 19 THEN
								'26'
							WHEN BLOQUE = 21 THEN
								'27'
							ELSE 
								'28'
						END
					) CODIGO_DIVISION,
					VALOR,
					BLOQUE
				FROM SUMA_BLOQUES
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					14 MES,
					(
						CASE
							WHEN BLOQUE = 17 THEN
								'25'
							WHEN BLOQUE = 19 THEN
								'26'
							WHEN BLOQUE = 21 THEN
								'27'
							ELSE 
								'28'
						END
					) CODIGO_DIVISION,
					VALOR,
					BLOQUE
				FROM SUMA_BLOQUES_PORCENTAJE
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					32 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM SUMA_SUB_TOTAL
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					33 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM SUMA_SUB_TOTAL_PORCENTAJE
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					31 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM SUMA_ELIMINACIONES
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					29 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM CONSOLIDADO_VALORES_SUMA
				UNION ALL
				SELECT
					ID,
					NOMBRE,
					CLASE,
					30 MES,
					'34' CODIGO_DIVISION,
					VALOR,
					15 BLOQUE
				FROM CONSOLIDADO_VALORES_PORCENTAJE
			) GROUP BY ID, NOMBRE, CLASE, MES, CODIGO_DIVISION, BLOQUE;
		
BEGIN
	IF V_VERSION = 1311 THEN
		FOR R_DATOS IN C_DATOS_HOMOLOGADAS
		LOOP
			V_T_REPORTE_FINANCIERO_EERR_CXU.EXTEND;
			V_T_REPORTE_FINANCIERO_EERR_CXU(V_T_REPORTE_FINANCIERO_EERR_CXU.LAST) := OBJ_REPORTE_FINANCIERO_EERR_CXU
			(
				R_DATOS.ID,
				R_DATOS.NOMBRE,
				R_DATOS.CLASE,
				NULL,
				NULL,
				R_DATOS.MES,
				R_DATOS.CODIGO_DIVISION,
				R_DATOS.VALOR,
				R_DATOS.BLOQUE
			);
		END LOOP;
	ELSE
		FOR R_DATOS IN C_DATOS
		LOOP
			V_T_REPORTE_FINANCIERO_EERR_CXU.EXTEND;
			V_T_REPORTE_FINANCIERO_EERR_CXU(V_T_REPORTE_FINANCIERO_EERR_CXU.LAST) := OBJ_REPORTE_FINANCIERO_EERR_CXU
			(
				R_DATOS.ID,
				R_DATOS.NOMBRE,
				R_DATOS.CLASE,
				NULL,
				NULL,
				R_DATOS.MES,
				R_DATOS.CODIGO_DIVISION,
				R_DATOS.VALOR,
				R_DATOS.BLOQUE
			);
		END LOOP;
	END IF;
	
    RETURN V_T_REPORTE_FINANCIERO_EERR_CXU;
END;