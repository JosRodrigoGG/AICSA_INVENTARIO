CREATE OR REPLACE PROCEDURE SAF.EST_CS_SUMARIZACION_RENGLONES
(
    V_CS_COTRATOID NUMBER
) AS
    CURSOR C_RENGLONES(P_CONTRATOID NUMBER) IS
        SELECT
            ID,
            CODIGO_RENGLON,
            INDIRECTO_PORCENTAJE,
            CANTIDAD,
            COSTO_TOTAL
        FROM SAF.EST_CS_RENGLONES
        WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID;

    CURSOR C_ACTIVIDADES(P_CODIGO_RENGLON VARCHAR2, P_CONTRATOID NUMBER) IS
        SELECT
            SUM(B.CANTIDAD) AS CANTIDAD,
            SUM(B.COSTO_UNITARIO) AS COSTO_UNITARIO,
            SUM(B.COSTO_UNITARIO * B.CANTIDAD) AS COSTO_TOTAL
        FROM SAF.EST_CS_ACTIVIDADES B
        INNER JOIN SAF.EST_CS_RENGLONES A
            ON A.ID = B.ID_EST_CS_RENGLONES
            AND A.ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
        START WITH A.CODIGO_RENGLON = P_CODIGO_RENGLON
        CONNECT BY PRIOR A.CODIGO_RENGLON = A.CODIGO_RENGLON_PADRE;

    CURSOR C_NIVEL(P_CONTRATOID NUMBER) IS
        WITH DATOS_RENGLONES AS (
            SELECT
                *
            FROM SAF.EST_CS_RENGLONES
            WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
        ), DATOS AS (
            SELECT
                ID,
                LEVEL AS NIVEL,
                CODIGO_RENGLON
            FROM DATOS_RENGLONES
            START WITH CODIGO_RENGLON_PADRE IS NULL
            CONNECT BY PRIOR CODIGO_RENGLON = CODIGO_RENGLON_PADRE
            ORDER SIBLINGS BY CODIGO_RENGLON
        )
        SELECT
            ID,
            NIVEL
        FROM DATOS;

    CURSOR C_RENGLONES_NIVEL (P_CONTRATOID NUMBER, P_NIVEL NUMBER) IS
        SELECT
            ID,
            CODIGO_RENGLON,
            CODIGO_RENGLON_PADRE,
            (ROW_NUMBER() OVER (ORDER BY CODIGO_RENGLON)) NUEVO_ORDEN
        FROM SAF.EST_CS_RENGLONES
        WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
          AND NIVEL = P_NIVEL
        ORDER BY CODIGO_RENGLON;

    CURSOR C_RENGLONES_SUMATORIA(P_CONTRATOID NUMBER) IS
        SELECT
            ID,
            CODIGO_RENGLON,
            CODIGO_RENGLON_PADRE,
            NIVEL,
            CANTIDAD,
            INDIRECTO_PORCENTAJE,
            TIPO_RENGLON
        FROM SAF.EST_CS_RENGLONES
        WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
        ORDER BY NIVEL DESC;

    CURSOR C_RENGLONES_BUSCAR(P_CONTRATOID NUMBER, P_CODIGO VARCHAR2) IS
        SELECT
            SUM(COSTO_TOTAL) AS COSTO_TOTAL
        FROM SAF.EST_CS_RENGLONES
        WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
          AND CODIGO_RENGLON_PADRE = P_CODIGO;

    V_CONTADOR NUMBER := 1;
    V_CONTADOR_MAX NUMBER := 0;

    V_SUMA NUMBER;
BEGIN
    FOR R_NIVEL IN C_NIVEL(V_CS_COTRATOID)
    LOOP
        UPDATE SAF.EST_CS_RENGLONES
            SET NIVEL = R_NIVEL.NIVEL
        WHERE ID = R_NIVEL.ID;
    END LOOP;

    SELECT
        NVL(MAX(NIVEL), 0)
    INTO
        V_CONTADOR_MAX
    FROM SAF.EST_CS_RENGLONES
    WHERE ID_CS_CONTRATOS_SERVICIO = V_CS_COTRATOID;

    WHILE V_CONTADOR <= V_CONTADOR_MAX
    LOOP
        FOR R_RENGLONES_NIVEL IN C_RENGLONES_NIVEL(V_CS_COTRATOID, V_CONTADOR)
        LOOP
            UPDATE SAF.EST_CS_RENGLONES
                SET ORDEN = R_RENGLONES_NIVEL.NUEVO_ORDEN
            WHERE ID = R_RENGLONES_NIVEL.ID AND
                  NIVEL = V_CONTADOR;
        END LOOP;
        V_CONTADOR := V_CONTADOR + 1;
    END LOOP;

    FOR R_RENGLONES IN C_RENGLONES(V_CS_COTRATOID)
    LOOP
        FOR R_ACTIVIDADES IN C_ACTIVIDADES(R_RENGLONES.CODIGO_RENGLON, V_CS_COTRATOID)
        LOOP
            IF R_ACTIVIDADES.COSTO_TOTAL IS NOT NULL THEN
                UPDATE SAF.EST_CS_RENGLONES SET
                    COSTO_UNITARIO = R_ACTIVIDADES.COSTO_TOTAL / R_RENGLONES.CANTIDAD,
                    COSTO_TOTAL = R_ACTIVIDADES.COSTO_TOTAL,
                    INDIRECTO = (R_ACTIVIDADES.COSTO_TOTAL) * (R_RENGLONES.INDIRECTO_PORCENTAJE / 100),
                    PRECIO_UNITARIO = (((R_ACTIVIDADES.COSTO_TOTAL) * (R_RENGLONES.INDIRECTO_PORCENTAJE / 100)) + R_ACTIVIDADES.COSTO_TOTAL) / R_RENGLONES.CANTIDAD,
                    PRECIO_TOTAL = (((R_ACTIVIDADES.COSTO_TOTAL) * (R_RENGLONES.INDIRECTO_PORCENTAJE / 100)) + R_ACTIVIDADES.COSTO_TOTAL)
                WHERE ID = R_RENGLONES.ID;
            END IF;
        END LOOP;
    END LOOP;

    FOR R_RENGLONES_SUMATORIA IN C_RENGLONES_SUMATORIA(V_CS_COTRATOID)
    LOOP
        OPEN C_RENGLONES_BUSCAR(V_CS_COTRATOID, R_RENGLONES_SUMATORIA.CODIGO_RENGLON);
            FETCH C_RENGLONES_BUSCAR INTO V_SUMA;
        CLOSE C_RENGLONES_BUSCAR;

        IF V_SUMA IS NOT NULL THEN
            UPDATE SAF.EST_CS_RENGLONES SET
                COSTO_UNITARIO = V_SUMA / R_RENGLONES_SUMATORIA.CANTIDAD,
                COSTO_TOTAL = V_SUMA,
                INDIRECTO = (
                    CASE
                        WHEN R_RENGLONES_SUMATORIA.CODIGO_RENGLON_PADRE IS NULL THEN
                            (SELECT NVL(SUM(B.INDIRECTO), 0) FROM SAF.EST_CS_RENGLONES B WHERE B.CODIGO_RENGLON_PADRE = R_RENGLONES_SUMATORIA.CODIGO_RENGLON)
                        ELSE ((V_SUMA) * (R_RENGLONES_SUMATORIA.INDIRECTO_PORCENTAJE / 100))
                    END
                    ),
                PRECIO_UNITARIO = (((V_SUMA) * (R_RENGLONES_SUMATORIA.INDIRECTO_PORCENTAJE / 100)) + V_SUMA) / R_RENGLONES_SUMATORIA.CANTIDAD,
                PRECIO_TOTAL = (((V_SUMA) * (R_RENGLONES_SUMATORIA.INDIRECTO_PORCENTAJE / 100)) + V_SUMA)
            WHERE ID = R_RENGLONES_SUMATORIA.ID;
        END IF;
    END LOOP;
END;