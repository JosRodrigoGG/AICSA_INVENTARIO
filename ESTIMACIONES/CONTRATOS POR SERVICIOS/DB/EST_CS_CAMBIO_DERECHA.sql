CREATE OR REPLACE PROCEDURE SAF.EST_CS_CAMBIO_DERECHA
(
    V_CS_COTRATOID NUMBER,
    v_ID_RENGLON NUMBER,
    V_TIPO_CODIGO NUMBER
) AS
    CURSOR C_RENGLONES(P_CONTRATOID NUMBER, P_RENGLON NUMBER) IS
        WITH DATOS AS
         (
             SELECT
                 A.CODIGO_RENGLON,
                 A.ORDEN
             FROM SAF.EST_CS_RENGLONES A
                      INNER JOIN SAF.EST_CS_RENGLONES B ON
                 B.CODIGO_RENGLON_PADRE = A.CODIGO_RENGLON_PADRE AND
                 B.NIVEL = B.NIVEL AND
                 A.ORDEN < B.ORDEN
             WHERE A.ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
               AND B.ID = P_RENGLON
         )
        SELECT
            CODIGO_RENGLON
        FROM DATOS B
        WHERE B.ORDEN = (SELECT MAX(A.ORDEN) FROM DATOS A);

    CURSOR C_UPDATE_CODIGOS_LIKE (P_CONTRATOID NUMBER, P_RENGLON VARCHAR2) IS
        SELECT
            ID,
            CODIGO_RENGLON
        FROM SAF.EST_CS_RENGLONES
        WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
          AND CODIGO_RENGLON LIKE P_RENGLON || '.%';

    CURSOR C_UPDATE_CODIGOS (P_CONTRATOID NUMBER, P_RENGLON VARCHAR2) IS
        SELECT
            ID,
            CODIGO_RENGLON
        FROM SAF.EST_CS_RENGLONES
        WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
          AND CODIGO_RENGLON = P_RENGLON;

    CURSOR C_UPDATE_PADRES_LIKE (P_CONTRATOID NUMBER, P_RENGLON VARCHAR2) IS
        SELECT
            ID,
            CODIGO_RENGLON_PADRE
        FROM SAF.EST_CS_RENGLONES
        WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
          AND CODIGO_RENGLON_PADRE LIKE P_RENGLON || '.%';

    CURSOR C_UPDATE_PADRES (P_CONTRATOID NUMBER, P_RENGLON VARCHAR2) IS
        SELECT
            ID,
            CODIGO_RENGLON_PADRE
        FROM SAF.EST_CS_RENGLONES
        WHERE ID_CS_CONTRATOS_SERVICIO = P_CONTRATOID
          AND CODIGO_RENGLON_PADRE = P_RENGLON;

    V_CODIGO VARCHAR2(1024);
    V_CODIGO_MODIFICAR VARCHAR2(1024);
BEGIN
    IF V_TIPO_CODIGO = 1 THEN
        FOR R_RENGLONES IN C_RENGLONES(V_CS_COTRATOID, v_ID_RENGLON)
        LOOP
            SELECT
                SAF.EST_CS_GET_GENERADOR_CODIGOS
                (
                        V_CS_COTRATOID,
                        2,
                        R_RENGLONES.CODIGO_RENGLON,
                        1
                )
            INTO
                V_CODIGO
            FROM DUAL;

            SELECT
                CODIGO_RENGLON
            INTO
                V_CODIGO_MODIFICAR
            FROM SAF.EST_CS_RENGLONES
            WHERE ID = v_ID_RENGLON;

            IF V_CODIGO IS NOT NULL THEN
                FOR R_TEMP IN C_UPDATE_CODIGOS_LIKE(V_CS_COTRATOID, V_CODIGO_MODIFICAR)
                LOOP
                    UPDATE SAF.EST_CS_RENGLONES
                        SET CODIGO_RENGLON = REPLACE(R_TEMP.CODIGO_RENGLON, V_CODIGO_MODIFICAR, V_CODIGO)
                    WHERE ID = R_TEMP.ID;
                END LOOP;

                FOR R_TEMP IN C_UPDATE_CODIGOS(V_CS_COTRATOID, V_CODIGO_MODIFICAR)
                LOOP
                    UPDATE SAF.EST_CS_RENGLONES
                    SET CODIGO_RENGLON = V_CODIGO
                    WHERE ID = R_TEMP.ID;
                END LOOP;

                FOR R_TEMP IN C_UPDATE_PADRES_LIKE(V_CS_COTRATOID, V_CODIGO_MODIFICAR)
                LOOP
                    UPDATE SAF.EST_CS_RENGLONES
                    SET CODIGO_RENGLON_PADRE = REPLACE(R_TEMP.CODIGO_RENGLON_PADRE, V_CODIGO_MODIFICAR, V_CODIGO)
                    WHERE ID = R_TEMP.ID;
                END LOOP;

                FOR R_TEMP IN C_UPDATE_PADRES(V_CS_COTRATOID, V_CODIGO_MODIFICAR)
                LOOP
                    UPDATE SAF.EST_CS_RENGLONES
                    SET CODIGO_RENGLON_PADRE = V_CODIGO
                    WHERE ID = R_TEMP.ID;
                END LOOP;

                UPDATE SAF.EST_CS_RENGLONES
                    SET CODIGO_RENGLON_PADRE = R_RENGLONES.CODIGO_RENGLON
                WHERE ID = v_ID_RENGLON;
            END IF;
        END LOOP;
    END IF;

    SAF.EST_CS_SUMARIZACION_RENGLONES(V_CS_COTRATOID);
END;