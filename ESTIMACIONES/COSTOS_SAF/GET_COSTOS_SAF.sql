CREATE OR REPLACE FUNCTION SAF.GET_COSTOS_SAF
(
	V_TABLA VARCHAR2,
    V_ACCION VARCHAR2 DEFAULT 'C'
)
RETURN FDU_T_COSTOS_SAF AS
    V_FDU_T_COSTOS_SAF FDU_T_COSTOS_SAF := FDU_T_COSTOS_SAF(); 

    CURSOR C_CTS_CONSUMABLE_STG IS
        SELECT 
            DISTINCT 
            CONSUMABLEID AS ID,
            (CONSUMABLEID || ' - ' || TITLE) AS DESCRIPCION
        FROM SAF.CTS_CONSUMABLE_STG
        WHERE TITLE IS NOT NULL
        AND CONSUMABLEID IS NOT NULL
        ORDER BY ID;

    CURSOR C_CTS_EQUIPMENT_STG IS
        SELECT 
            DISTINCT 
            DATABASEID AS ID,
            (DATABASEID || ' - ' || TITLE) AS DESCRIPCION
        FROM SAF.CTS_EQUIPMENT_STG
        WHERE TITLE IS NOT NULL
        AND DATABASEID IS NOT NULL
        ORDER BY ID;
    
    CURSOR C_CTS_LABOR_STG IS
        SELECT 
            DISTINCT 
            DATABASEID AS ID,
            (DATABASEID || ' - ' || TITLE) AS DESCRIPCION
        FROM SAF.CTS_LABOR_STG
        WHERE TITLE IS NOT NULL
        AND DATABASEID IS NOT NULL
        ORDER BY DATABASEID;

    CURSOR C_CTS_MATERIAL_STG IS
        SELECT 
            DISTINCT 
            MATERIALID AS ID,
            (MATERIALID || ' - ' || TITLE) AS DESCRIPCION
        FROM SAF.CTS_MATERIAL_STG
        WHERE TITLE IS NOT NULL
        AND MATERIALID IS NOT NULL
        ORDER BY ID;
    
    CURSOR C_CTS_SUBCONTRACTOR_STG IS
        SELECT 
            DISTINCT 
            DATABASEID AS ID,
            (DATABASEID || ' - ' || TITLE) AS DESCRIPCION
        FROM SAF.CTS_SUBCONTRACTOR_STG
        WHERE TITLE IS NOT NULL
        AND DATABASEID IS NOT NULL
        ORDER BY DATABASEID;
    
    CURSOR C_GRAL_ITEMS IS
        SELECT 
            (CODIGO_ITEM || ' - ' || NOMBRE_ITEM) AS DESCRIPCION,
            CODIGO_ITEM AS ID
        FROM SAF.GRAL_ITEMS
        WHERE UPPER(NOMBRE_ITEM) NOT LIKE '%NO USAR%'
        AND CODIGO_ITEM IS NOT NULL
        AND NOMBRE_ITEM IS NOT NULL
        AND CODIGO_ITEM > 0
        ORDER BY ID;
    
    CURSOR C_MAQ_INVENTARIO IS
        SELECT 
            DISTINCT 
            (ID_MAQUINA || ' - ' || DESCRIPCION) DESCRIPCION,
            ID_MAQUINA AS ID
        FROM SAF.MAQ_INVENTARIO
        WHERE DESCRIPCION IS NOT NULL
        AND ID_MAQUINA IS NOT NULL
        ORDER BY ID_MAQUINA;

    CURSOR C_PLA_PUESTOS_TABLE IS
        SELECT 
            DISTINCT 
            (CAST(CODIGO_PUESTO AS NUMBER) || ' - ' || DESCRIPCION) DESCRIPCION,
            CAST(CODIGO_PUESTO AS NUMBER) AS ID
        FROM SAF.PLA_PUESTOS_TABLE
        WHERE DESCRIPCION NOT LIKE '%NO USAR%'
        AND DESCRIPCION IS NOT NULL
        AND CODIGO_PUESTO IS NOT NULL
        ORDER BY CAST(CODIGO_PUESTO AS NUMBER);
BEGIN
	IF V_TABLA = 'CTS_CONSUMABLE_STG' THEN
        FOR R_DATOS IN C_CTS_CONSUMABLE_STG
        LOOP
            V_FDU_T_COSTOS_SAF.EXTEND;
            V_FDU_T_COSTOS_SAF(V_FDU_T_COSTOS_SAF.LAST) := FDU_OBJ_COSTOS_SAF
            (
                R_DATOS.DESCRIPCION,
                R_DATOS.ID
            );
        END LOOP;
    ELSIF V_TABLA = 'CTS_EQUIPMENT_STG' THEN
        FOR R_DATOS IN C_CTS_EQUIPMENT_STG
        LOOP
            V_FDU_T_COSTOS_SAF.EXTEND;
            V_FDU_T_COSTOS_SAF(V_FDU_T_COSTOS_SAF.LAST) := FDU_OBJ_COSTOS_SAF
            (
                R_DATOS.DESCRIPCION,
                R_DATOS.ID
            );
        END LOOP;
    ELSIF V_TABLA = 'CTS_LABOR_STG' THEN
        FOR R_DATOS IN C_CTS_LABOR_STG
        LOOP
            V_FDU_T_COSTOS_SAF.EXTEND;
            V_FDU_T_COSTOS_SAF(V_FDU_T_COSTOS_SAF.LAST) := FDU_OBJ_COSTOS_SAF
            (
                R_DATOS.DESCRIPCION,
                R_DATOS.ID
            );
        END LOOP;
    ELSIF V_TABLA = 'CTS_MATERIAL_STG' THEN
        FOR R_DATOS IN C_CTS_MATERIAL_STG
        LOOP
            V_FDU_T_COSTOS_SAF.EXTEND;
            V_FDU_T_COSTOS_SAF(V_FDU_T_COSTOS_SAF.LAST) := FDU_OBJ_COSTOS_SAF
            (
                R_DATOS.DESCRIPCION,
                R_DATOS.ID
            );
        END LOOP;
    ELSIF V_TABLA = 'CTS_SUBCONTRACTOR_STG' THEN
        FOR R_DATOS IN C_CTS_SUBCONTRACTOR_STG
        LOOP
            V_FDU_T_COSTOS_SAF.EXTEND;
            V_FDU_T_COSTOS_SAF(V_FDU_T_COSTOS_SAF.LAST) := FDU_OBJ_COSTOS_SAF
            (
                R_DATOS.DESCRIPCION,
                R_DATOS.ID
            );
        END LOOP;
    ELSIF V_TABLA = 'GRAL_ITEMS' THEN
        FOR R_DATOS IN C_GRAL_ITEMS
        LOOP
            V_FDU_T_COSTOS_SAF.EXTEND;
            V_FDU_T_COSTOS_SAF(V_FDU_T_COSTOS_SAF.LAST) := FDU_OBJ_COSTOS_SAF
            (
                R_DATOS.DESCRIPCION,
                R_DATOS.ID
            );
        END LOOP;
    ELSIF V_TABLA = 'MAQ_INVENTARIO' THEN
        FOR R_DATOS IN C_MAQ_INVENTARIO
        LOOP
            V_FDU_T_COSTOS_SAF.EXTEND;
            V_FDU_T_COSTOS_SAF(V_FDU_T_COSTOS_SAF.LAST) := FDU_OBJ_COSTOS_SAF
            (
                R_DATOS.DESCRIPCION,
                R_DATOS.ID
            );
        END LOOP;
    ELSIF V_TABLA = 'PLA_PUESTOS_TABLE' THEN
        FOR R_DATOS IN C_PLA_PUESTOS_TABLE
        LOOP
            V_FDU_T_COSTOS_SAF.EXTEND;
            V_FDU_T_COSTOS_SAF(V_FDU_T_COSTOS_SAF.LAST) := FDU_OBJ_COSTOS_SAF
            (
                R_DATOS.DESCRIPCION,
                R_DATOS.ID
            );
        END LOOP;
    END IF;

    RETURN V_FDU_T_COSTOS_SAF;
END GET_COSTOS_SAF;